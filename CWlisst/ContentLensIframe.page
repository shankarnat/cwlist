<apex:page showHeader="false" standardStylesheets="false" sidebar="false" applyHtmlTag="false" applyBodyTag="false" docType="html-5.0">
    <html>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Content Lens Manager</title>
        <style>
            body {
                margin: 0;
                padding: 0;
                overflow: hidden;
            }
            #contentLensFrame {
                width: 100%;
                height: 100vh;
                border: none;
            }
            .loading {
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                font-family: Salesforce Sans, Arial, sans-serif;
                color: #666;
            }
        </style>
    </head>
    <body>
        <div id="loading" class="loading">Loading Content Lens Manager...</div>
        <iframe 
            id="contentLensFrame" 
            src="{!$Setup.ContentLensSettings__c.HerokuAppURL__c}"
            style="display: none;"
            sandbox="allow-scripts allow-forms allow-same-origin allow-popups"
            title="Content Lens Manager">
        </iframe>
        
        <script>
            (function() {
                // Get Heroku app URL from custom setting or use default
                var herokuUrl = '{!$Setup.ContentLensSettings__c.HerokuAppURL__c}' || 'https://your-app-name.herokuapp.com';
                var iframe = document.getElementById('contentLensFrame');
                var loading = document.getElementById('loading');
                
                // Set iframe source
                iframe.src = herokuUrl;
                
                // Handle iframe load
                iframe.onload = function() {
                    loading.style.display = 'none';
                    iframe.style.display = 'block';
                };
                
                // Handle messages from iframe
                window.addEventListener('message', function(event) {
                    // Verify origin
                    if (event.origin !== herokuUrl.replace(/\/$/, '')) {
                        return;
                    }
                    
                    // Handle different message types
                    switch(event.data.type) {
                        case 'contentLensReady':
                            console.log('Content Lens Manager loaded');
                            break;
                        case 'openLens':
                            // Navigate to lens detail page
                            if (typeof sforce !== 'undefined' && sforce.one) {
                                // Lightning Experience
                                sforce.one.navigateToURL('/lightning/n/Content_Lens_Detail?lens=' + encodeURIComponent(event.data.lensName));
                            } else {
                                // Classic
                                window.location.href = '/apex/ContentLensDetail?lens=' + encodeURIComponent(event.data.lensName);
                            }
                            break;
                    }
                });
                
                // Handle iframe errors
                iframe.onerror = function() {
                    loading.innerHTML = 'Error loading Content Lens Manager. Please check your settings.';
                };
            })();
        </script>
    </body>
    </html>
</apex:page>